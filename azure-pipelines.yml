trigger:
- '*'

variables:
  buildConfiguration: 'Release'
  leaderboardRepository: 'leaderboard'
  webRepository: 'web'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'secret'

stages:
- stage: 'Build'
  displayName: 'Build and publish'
  jobs:  
  - job: 'Build'
    displayName: 'Build and Test'
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - script: |
        docker build -f Dockerfile.build -t dotnetcore-build:$(tag) .
        docker run --name dotnetcoreapp --rm -d dotnetcore-build:$(tag) tail -f /dev/null
        docker exec dotnetcoreapp ls -l -R /app
        docker cp dotnetcoreapp:app/TestResults $(System.DefaultWorkingDirectory)
        docker cp dotnetcoreapp:app/out $(System.DefaultWorkingDirectory)
        docker stop dotnetcoreapp

    - task: PublishTestResults@2
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'
        failTaskOnFailedTests: true
    - task: Docker@2
      displayName: 'Build and push the leaderboard image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(leaderboardRepository)
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        containerRegistry: 'Container Registry Connection'
        tags: |
          $(tag)
    - publish: '$(Build.SourcesDirectory)/manifests'
      artifact: manifests